<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moka.goods.dao.GoodsDao">
    <insert id="insert" parameterType="moka.goods.bo.Goods" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_goods(
        id, contractId, invoiceId, createDate, updateDate, name, specification, unit, quantity, price, amt, rate, amtOfTax, amtTax, remark, state,applicationId
        ) VALUES (
        #{id},#{contractId},#{invoiceId},#{createDate},#{updateDate},#{name},#{specification},#{unit},#{quantity},#{price},#{amt},#{rate},#{amtOfTax},#{amtTax},#{remark},#{state},#{applicationId}
        )
        <selectKey keyProperty="id" order="BEFORE" resultType="String">
            select $uuid()
        </selectKey>
    </insert>

    <!--批量添加-->
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_goods(
        id, contractId, invoiceId, createDate, updateDate, name, specification, unit, quantity, price, amt, rate, amtOfTax, amtTax, remark, state
        ) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            ($uuid(),#{item.contractId},#{item.invoiceId},NOW(),#{item.updateDate},#{item.name},#{item.specification},#{item.unit},#{item.quantity},#{item.price},#{item.amt},#{item.rate},#{item.amtOfTax},#{item.amtTax},#{item.remark},#{item.state},#{item.applicationId})
        </foreach>
    </insert>

    <update id="update" parameterType="moka.goods.bo.Goods">
        UPDATE t_goods
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="specification != null and specification != ''">specification = #{specification},</if>
            <if test="unit != null and unit != ''">unit = #{unit},</if>
            <if test="quantity != 0">quantity = #{quantity},</if>
            <if test="price != null">price = #{price},</if>
            <if test="amt != null">amt = #{amt},</if>
            <if test="rate != null">rate = #{rate},</if>
            <if test="amtOfTax != null">amtOfTax = #{amtOfTax},</if>
            <if test="amtTax != null">amtTax = #{amtTax},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateDate != null">updateDate = #{updateDate},</if>
        </trim>
        WHERE id = #{id}
    </update>

    <select id="findOne" parameterType="String" resultType="moka.goods.to.GoodsTo">
        SELECT * FROM t_goods WHERE id = #{id};
    </select>

    <select id="findCount" parameterType="moka.basic.page.Page" resultType="Integer">
        SELECT COUNT(id) FROM t_goods g
        WHERE 1=1
        AND g.state != 1
        <if test="name != null and name != ''">
            AND g.name LIKE
            CONCAT('%',#{name},'%')
        </if>
    </select>

    <select id="findPage" parameterType="moka.basic.page.Page" resultType="moka.goods.to.GoodsTo">
        SELECT * FROM t_goods g
        WHERE 1=1
        AND g.state != 1
        <if test="name != null and name != ''">
            AND g.name LIKE
            CONCAT('%',#{name},'%')
        </if>
        LIMIT #{pageStart} , #{pageSize};
    </select>

    <select id="findByContractId" parameterType="String" resultType="moka.goods.to.GoodsTo">
        SELECT * FROM t_goods g WHERE
        g.state != 1
        AND g.contractId = #{contractId}
    </select>
</mapper>