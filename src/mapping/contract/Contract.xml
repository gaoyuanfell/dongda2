<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moka.contract.dao.ContractDao">

    <insert id="insert" parameterType="moka.contract.bo.Contract" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_contract (
          id,createDate, updateDate, state, contractNo, versionNo, companyIdA, companyContractIdA, companyIdB, companyContractIdB, companyIdC, companyContractIdC, signDate, startDate, endDate, itemName, item, amt, applicationId, contactType, contactState, remark, paymentNum
        ) VALUES (
          $uuid(),#{createDate},#{updateDate},#{state},#{contractNo},#{versionNo},#{companyIdA},#{companyContractIdA},#{companyIdB},#{companyContractIdB},#{companyIdC},#{companyContractIdC},#{signDate},#{startDate},#{endDate},#{itemName},#{item},#{amt},#{applicationId},#{contactType},#{contactState},#{remark},#{paymentNum}
        )
    </insert>

    <select id="findOne" parameterType="String" resultType="moka.contract.to.ContractTo">
        SELECT c.*,coa.companyName companyIdaName,cob.companyName companyIdbName,cu.name companyContractIdaName,u.name companyContractIdbName FROM t_contract c
        LEFT JOIN t_company coa ON c.companyIdA = coa.id
        LEFT JOIN t_company cob ON c.companyIdB = cob.id
        LEFT JOIN t_customer cu ON c.companyContractIdA = cu.id
        LEFT JOIN t_user u ON c.companyContractIdB = u.id
        WHERE c.id = #{id} AND c.state != 1;
    </select>

    <select id="findCount" resultType="Integer">
        SELECT COUNT(id) FROM t_contract c
        WHERE 1=1
        AND (c.applicationId = #{applicationId} or c.applicationId in (SELECT ca.applicationId FROM r_company_admin ca WHERE c.companyIdB = ca.companyId))
        AND c.state != 1
        <if test="contractNo != null and contractNo != ''">
            AND c.contractNo LIKE CONCAT('%',#{contractNo},'%')
        </if>
    </select>

    <select id="findPage" parameterType="moka.basic.page.Page" resultType="moka.contract.to.ContractTo">
        SELECT * FROM t_contract c WHERE 1=1
        AND (c.applicationId = #{applicationId} or c.applicationId in (SELECT ca.applicationId FROM r_company_admin ca WHERE c.companyIdB = ca.companyId))
        AND c.state != 1
        <if test="contractNo != null and contractNo != ''">
            AND c.contractNo LIKE CONCAT('%',#{contractNo},'%')
        </if>
        LIMIT #{pageStart} , #{pageSize};
    </select>

    <!--作用于下拉 -->
    <select id="findUseSelect" parameterType="moka.contract.vo.ContractVo" resultType="moka.contract.to.ContractTo">
        SELECT c.id, c.contractNo FROM t_contract c WHERE
        c.applicationId = #{applicationId}
        AND c.state != 1
        <if test="contractNo != null and contractNo != ''">
            AND c.contractNo LIKE
            CONCAT('%',#{contractNo},'%')
        </if>
    </select>

    <select id="findRepeatContract" parameterType="moka.contract.vo.ContractVo" resultType="moka.contract.to.ContractTo">
        SELECT * FROM  t_contract c WHERE c.contractNo = #{contractNo}
    </select>

    <!--批量添加合同-->
    <!--<insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_contract (
          createDate, updateDate, state, contractNo, versionNo, companyIdA, companyContractIdA, companyIdB, companyContarctIdB, companyIdC, companyContractIdC, signDate, startDate, endDate, itemName, item, amt, applicationId, contactType, contactState, remark, paymentNum
        ) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.createDate},#{item.updateDate},#{item.state},#{item.contractNo},#{item.versionNo},#{item.companyIdA},#{item.companyContractIdA},#{item.companyIdB},#{item.companyContarctIdB},#{item.companyIdC},#{item.companyContractIdC},#{item.signDate},#{item.startDate},#{item.endDate},#{item.itemName},#{item.item},#{item.amt},#{item.applicationId},#{item.contactType},#{item.contactState},#{item.remark},#{item.paymentNum})
        </foreach>
    </insert>-->

</mapper>